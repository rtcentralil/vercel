import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';
import { remark } from 'remark';
import html from 'remark-html';
import SEO from '../../components/SEO';

export default function Post({ frontmatter, content }) {
  return (
    <>
      <SEO 
        title={frontmatter.title} 
        description={frontmatter.excerpt} 
      />
      <article className="blog-post-section py-16">
        <div className="container mx-auto px-6">
          <h1 className="text-4xl font-bold mb-4">{frontmatter.title}</h1>
          <div className="prose" dangerouslySetInnerHTML={{ __html: content }} />
        </div>
      </article>
    </>
  );
}

export async function getStaticPaths() {
  const postsDirectory = path.join(process.cwd(), 'posts');
  const filenames = fs.readdirSync(postsDirectory);
  const paths = filenames.map(filename => ({
    params: { slug: filename.replace(/\.md$/, '') }
  }));
  return {
    paths,
    fallback: false,
  };
}

export async function getStaticProps({ params }) {
  const postsDirectory = path.join(process.cwd(), 'posts');
  const filePath = path.join(postsDirectory, `${params.slug}.md`);
  const fileContents = fs.readFileSync(filePath, 'utf8');
  const { data, content } = matter(fileContents);
  const processedContent = await remark()
    .use(html)
    .process(content);
  const contentHtml = processedContent.toString();

  return {
    props: {
      frontmatter: data,
      content: contentHtml,
    },
  };
}